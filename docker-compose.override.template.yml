version: '3.4'
services:
  dev:
    build:
      context: .
      dockerfile: ./deployment/docker/Dockerfile-dev
    volumes:
      - static-data:/home/web/static
      - media-data:/home/web/media
      - ./django_project:/home/web/django_project
      # Images on the platform will be stored here
      - minio_images:/home/web/minio
    ports:
      # for django test server
      - "5000:8080"
      # for ssh
      - "5001:22"
    entrypoint: [ ]
  
  django:
    build:
      context: .
      dockerfile: ./deployment/docker/Dockerfile
    volumes:
      - static-data:/home/web/static
      - media-data:/home/web/media
      # Images on the platform will be stored here
      - minio_images:/home/web/minio
    environment:
      - AWS_ACCESS_KEY=${MINIO_ROOT_USER:-minisass_admin}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD:-secure_minio_secret}
      - DJANGO_DB=${POSTGRES_DB:-minisass_data}
      - POSTGRES_USER=${POSTGRES_USER:-docker}
      - POSTGRES_PASS=${POSTGRES_PASS:-docker}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - SENTRY_KEY=${SENTRY_KEY:-}
      - MINIO_ROOT=/home/web/minio
      - MINIO_BUCKET=${BUCKET:-demo}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minisass_admin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-secure_minio_secret}
      - MINIO_AI_BUCKET=${BUCKET}
      - MINIO_ENDPOINT=${MINIO_URL:-http://minio:9000}
      - MINIO_URL=${MINIO_URL:-http://minio:9000}
      - ALLOWED_HOSTS='*'
      - DEV_SETUP=${DEV_SETUP}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    ports:
      - "8080"
    logging:
      driver: json-file
      options:
        max-size: 200m
        max-file: '10'
        